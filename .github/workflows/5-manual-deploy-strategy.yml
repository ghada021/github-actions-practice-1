name: Manual Deployment Controller

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose target environment"
        required: true
        default: staging
        type: choice
        options:
          - staging
          - production
          - development
      version:
        description: "Version or tag to deploy (e.g., v1.2.3)"
        required: true
        default: latest
      skip_tests:
        description: "Skip testing phase (use with caution)"
        required: false
        default: false
        type: boolean
      strategy:
        description: "Deployment strategy"
        required: true
        default: rolling
        type: choice
        options:
          - rolling
          - blue-green
          - canary
      channel:
        description: "Slack channel for notifications (optional)"
        required: false
        default: "#deployments"

jobs:
  validate-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Display Deployment Summary
        run: |
          echo "=== Deployment Summary ==="
          echo "🎯 Target Environment: ${{ github.event.inputs.environment }}"
          echo "📦 Version: ${{ github.event.inputs.version }}"
          echo "🧪 Skip Tests: ${{ github.event.inputs.skip_tests }}"
          echo "🚀 Strategy: ${{ github.event.inputs.strategy }}"
          echo "📢 Notification Channel: ${{ github.event.inputs.channel }}"
          echo "👤 Triggered by: ${{ github.actor }}"
          echo "⏰ Deployment Time: $(date)"

      - name: Environment-Specific Validation
        run: |
          ENV="${{ github.event.inputs.environment }}"
          if [[ "$ENV" == "production" ]]; then
            echo "⚠️ Warning: You are deploying to PRODUCTION!"
          elif [[ "$ENV" == "staging" ]]; then
            echo "ℹ️ Info: Deploying to STAGING environment"
          else
            echo "🐛 Debug: Deploying to DEVELOPMENT environment"
          fi

      - name: Version Validation
        run: |
          VER="${{ github.event.inputs.version }}"
          echo "=== Version Validation ==="
          if [[ "$VER" == "latest" ]]; then
            echo "⚠️ Using latest version - consider specifying a tag"
          else
            echo "✅ Deploying version: $VER"
          fi

  deploy:
    needs: validate-inputs
    runs-on: ubuntu-latest
    steps:
      - name: Pre-deployment Checks
        run: |
          echo "=== Pre-deployment Checks ==="
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Version: ${{ github.event.inputs.version }}"
          echo "Strategy: ${{ github.event.inputs.strategy }}"
          echo "Skip Tests: ${{ github.event.inputs.skip_tests }}"

      - name: Conditional Testing
        if: ${{ github.event.inputs.skip_tests == 'false' }}
        run: |
          echo "🧪 Running tests for version ${{ github.event.inputs.version }}..."
          echo "✅ All tests passed!"

      - name: Environment-Specific Deployment
        run: |
          ENV="${{ github.event.inputs.environment }}"
          VER="${{ github.event.inputs.version }}"
          STRAT="${{ github.event.inputs.strategy }}"
          echo "=== Deploying to $ENV ==="
          if [[ "$ENV" == "production" ]]; then
            echo "🚨 Production deployment - ensure approvals obtained!"
          elif [[ "$ENV" == "staging" ]]; then
            echo "ℹ️ Staging deployment initiated"
          else
            echo "🐛 Development deployment"
          fi
          echo "=== Deploying with $STRAT strategy ==="

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Deployment Status Check
        run: |
          echo "=== Deployment Status ==="
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Version: ${{ github.event.inputs.version }}"
          if [ ${{ needs.deploy.result }} == 'success' ]; then
            echo "✅ Deployment succeeded"
          else
            echo "❌ Deployment failed"
          fi

      - name: Notification Message
        run: |
          echo "📢 Sending notification to: ${{ github.event.inputs.channel }}"
          echo "🔗 Deployment details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
